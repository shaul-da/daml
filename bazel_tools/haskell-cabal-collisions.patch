From 17a2c0e7813236fdcc8107544922d44fcabe924c Mon Sep 17 00:00:00 2001
From: Andreas Herrmann <andreas.herrmann@tweag.io>
Date: Tue, 3 Sep 2019 15:07:10 +0200
Subject: [PATCH 1/3] Cabal: Unique output directories

Make the output of haskell_cabal_library|binary depend on the target
name. This is to avoid collisions with other targets in the same
package and allow multiple Cabal targetes in the same package.

Try to have the package name appear only once in the output path. This
is to avoid too long file paths, which might lead to issues on Windows.
---
 haskell/cabal.bzl                    | 10 +++++-----
 haskell/private/cabal_wrapper.sh.tpl |  6 +++---
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/haskell/cabal.bzl b/haskell/cabal.bzl
index c585332f..95a787a7 100644
--- a/haskell/cabal.bzl
+++ b/haskell/cabal.bzl
@@ -181,15 +181,15 @@ def _haskell_cabal_library_impl(ctx):
     cabal = _find_cabal(hs, ctx.files.srcs)
     setup = _find_setup(hs, cabal, ctx.files.srcs)
     package_database = hs.actions.declare_file(
-        "_install/package.conf.d/package.cache",
+        "_install/{}.conf.d/package.cache".format(package_id),
         sibling = cabal,
     )
     interfaces_dir = hs.actions.declare_directory(
-        "_install/iface",
+        "_install/{}_iface".format(package_id),
         sibling = cabal,
     )
     data_dir = hs.actions.declare_directory(
-        "_install/data",
+        "_install/{}_data".format(package_id),
         sibling = cabal,
     )
     static_library_filename = "_install/lib/libHS{}.a".format(package_id)
@@ -370,7 +370,7 @@ def _haskell_cabal_binary_impl(ctx):
     cabal = _find_cabal(hs, ctx.files.srcs)
     setup = _find_setup(hs, cabal, ctx.files.srcs)
     package_database = hs.actions.declare_file(
-        "_install/package.conf.d/package.cache",
+        "_install/{}.conf.d/package.cache".format(hs.label.name),
         sibling = cabal,
     )
     binary = hs.actions.declare_file(
@@ -378,7 +378,7 @@ def _haskell_cabal_binary_impl(ctx):
         sibling = cabal,
     )
     data_dir = hs.actions.declare_directory(
-        "_install/data",
+        "_install/{}_data".format(hs.label.name),
         sibling = cabal,
     )
     (tool_inputs, tool_input_manifests) = ctx.resolve_tools(tools = ctx.attr.tools)
diff --git a/haskell/private/cabal_wrapper.sh.tpl b/haskell/private/cabal_wrapper.sh.tpl
index a6011be4..c519a758 100644
--- a/haskell/private/cabal_wrapper.sh.tpl
+++ b/haskell/private/cabal_wrapper.sh.tpl
@@ -84,11 +84,11 @@ shift 1
 ar=$(realpath %{ar})
 strip=$(realpath %{strip})
 distdir=$(mktemp -d)
-libdir=$pkgroot/iface
+libdir="$pkgroot/${name}_iface"
 dynlibdir=$pkgroot/lib
 bindir=$pkgroot/bin
-datadir=$pkgroot/data
-package_database=$pkgroot/package.conf.d
+datadir="$pkgroot/${name}_data"
+package_database="$pkgroot/${name}.conf.d"
 
 %{ghc_pkg} recache --package-db=$package_database
 

From 62dd2156946576e8008c29848e305b463ae67ba2 Mon Sep 17 00:00:00 2001
From: Andreas Herrmann <andreas.herrmann@tweag.io>
Date: Tue, 3 Sep 2019 14:55:48 +0200
Subject: [PATCH 2/3] Regression test cabal_library collision

Having two haskell_cabal_library targets in the same package fails with
the following collision error.

```
ERROR: file 'tests/haskell_cabal_library/_install/package.conf.d/package.cache' is generated by these conflicting actions:
Label: //tests/haskell_cabal_library:second-lib, //tests/haskell_cabal_library:lib
RuleClass: haskell_cabal_library rule
Configuration: 714c7274e44d92bf3a55b1a39861a10c
Mnemonic: HaskellCabalLibrary
Action key: bfc9b30479665c060e57be9c4d0d48b2, 8aeac69ca2cf5b59f80d79fc0502d926
Progress message: HaskellCabalLibrary //tests/haskell_cabal_library:second-lib, HaskellCabalLibrary //tests/haskell_cabal_library:lib
PrimaryInput: File:[/home/aj/tweag.io/da/bazel-projects/rules_haskell_cabal_outdir[source]]tests/haskell_cabal_library/SecondLib.hs, File:[/home/aj/tweag.io/da/bazel-projects/rules_haskell_cabal_outdir[source]]tests/haskell_cabal_library/Lib.hs
PrimaryOutput: File:[[<execution_root>]bazel-out/k8-fastbuild/bin]tests/haskell_cabal_library/_install/package.conf.d/package.cache
ERROR: com.google.devtools.build.lib.actions.MutableActionGraph$ActionConflictException: for tests/haskell_cabal_library/_install/package.conf.d/package.cache, previous action: action 'HaskellCabalLibrary //tests/haskell_cabal_library:lib', attempted action: action 'HaskellCabalLibrary //tests/haskell_cabal_library:second-lib'
```
---
 tests/haskell_cabal_library/BUILD.bazel      | 10 ++++++++++
 tests/haskell_cabal_library/Main.hs          |  3 ++-
 tests/haskell_cabal_library/SecondLib.hs     |  3 +++
 tests/haskell_cabal_library/second-lib.cabal |  9 +++++++++
 4 files changed, 24 insertions(+), 1 deletion(-)
 create mode 100644 tests/haskell_cabal_library/SecondLib.hs
 create mode 100644 tests/haskell_cabal_library/second-lib.cabal

diff --git a/tests/haskell_cabal_library/BUILD.bazel b/tests/haskell_cabal_library/BUILD.bazel
index 03b6912b..4ef9b6c1 100644
--- a/tests/haskell_cabal_library/BUILD.bazel
+++ b/tests/haskell_cabal_library/BUILD.bazel
@@ -20,11 +20,21 @@ haskell_cabal_library(
     version = "0.1.0.0",
 )
 
+haskell_cabal_library(
+    name = "second-lib",
+    srcs = [
+        "SecondLib.hs",
+        "second-lib.cabal",
+    ],
+    version = "0.1.0.0",
+)
+
 haskell_test(
     name = "haskell_cabal_library",
     srcs = ["Main.hs"],
     deps = [
         ":base",
         ":lib",
+        ":second-lib",
     ],
 )
diff --git a/tests/haskell_cabal_library/Main.hs b/tests/haskell_cabal_library/Main.hs
index 579e9a98..7300a75a 100644
--- a/tests/haskell_cabal_library/Main.hs
+++ b/tests/haskell_cabal_library/Main.hs
@@ -1,5 +1,6 @@
 module Main where
 
 import Lib
+import SecondLib
 
-main = print Lib.x
+main = print (Lib.x + SecondLib.y)
diff --git a/tests/haskell_cabal_library/SecondLib.hs b/tests/haskell_cabal_library/SecondLib.hs
new file mode 100644
index 00000000..ea679b93
--- /dev/null
+++ b/tests/haskell_cabal_library/SecondLib.hs
@@ -0,0 +1,3 @@
+module SecondLib where
+
+y = 3
diff --git a/tests/haskell_cabal_library/second-lib.cabal b/tests/haskell_cabal_library/second-lib.cabal
new file mode 100644
index 00000000..ee6b880d
--- /dev/null
+++ b/tests/haskell_cabal_library/second-lib.cabal
@@ -0,0 +1,9 @@
+cabal-version: >=1.10
+name: second-lib
+version: 0.1.0.0
+build-type: Simple
+
+library
+  build-depends: base >=4.12 && <4.13
+  default-language: Haskell2010
+  exposed-modules: SecondLib

From c8649a05406469114c3b30c66cbbcf2554f1590a Mon Sep 17 00:00:00 2001
From: Andreas Herrmann <andreas.herrmann@tweag.io>
Date: Tue, 3 Sep 2019 14:45:10 +0200
Subject: [PATCH 3/3] Regression test: cabal_library|binary collision

Having a haskell_cabal_library and haskell_cabal_binary in the same
package based on the same Cabal file fails with the following collision
error.

```
ERROR: file 'tests/haskell_cabal_package/_install/package.conf.d/package.cache' is generated by these conflicting actions:
Label: //tests/haskell_cabal_package:lib, //tests/haskell_cabal_package:haskell_cabal_package
RuleClass: haskell_cabal_library rule, haskell_cabal_binary rule
Configuration: 714c7274e44d92bf3a55b1a39861a10c
Mnemonic: HaskellCabalLibrary, HaskellCabalBinary
Action key: 0db4b6214ae988fa02eed064a8920cfb, eced508d50434c291492f51469fc7b5b
Progress message: HaskellCabalLibrary //tests/haskell_cabal_package:lib, HaskellCabalBinary //tests/haskell_cabal_package:haskell_cabal_package
PrimaryInput: File:[/home/aj/tweag.io/da/bazel-projects/rules_haskell_cabal_outdir[source]]tests/haskell_cabal_package/BUILD.bazel
PrimaryOutput: File:[[<execution_root>]bazel-out/k8-fastbuild/bin]tests/haskell_cabal_package/_install/package.conf.d/package.cache
Owner information: //tests/haskell_cabal_package:lib BuildConfigurationValue.Key[714c7274e44d92bf3a55b1a39861a10c] false, //tests/haskell_cabal_package:haskell_cabal_package BuildConfigurationValue.Key[714c7274e44d92bf3a55b1a39861a10c] false
MandatoryInputs: Attempted action contains artifacts not in previous action (first 5):
        tests/haskell_cabal_package/cabal_wrapper-lib.sh
Previous action contains artifacts not in attempted action (first 5):
        tests/haskell_cabal_package/_install/package.conf.d/package.cache
        external/rules_haskell_ghc_nixpkgs_haskell_toolchain/lib/ghc-8.6.5/base-4.12.0.0/include/EventConfig.h
        external/rules_haskell_ghc_nixpkgs_haskell_toolchain/lib/ghc-8.6.5/base-4.12.0.0/include/HsBase.h
        external/rules_haskell_ghc_nixpkgs_haskell_toolchain/lib/ghc-8.6.5/base-4.12.0.0/include/HsBaseConfig.h
        external/rules_haskell_ghc_nixpkgs_haskell_toolchain/lib/ghc-8.6.5/base-4.12.0.0/include/WCsubst.h
Outputs: Attempted action contains artifacts not in previous action (first 5):
        tests/haskell_cabal_package/_install/iface
        tests/haskell_cabal_package/_install/lib/libHSlib-0.1.0.0.a
        tests/haskell_cabal_package/_install/lib/libHSlib-0.1.0.0-ghc8.6.5.so
Previous action contains artifacts not in attempted action (first 5):
        tests/haskell_cabal_package/_install/bin/haskell_cabal_package
ERROR: com.google.devtools.build.lib.actions.MutableActionGraph$ActionConflictException: for tests/haskell_cabal_package/_install/package.conf.d/package.cache, previous action: action 'HaskellCabalBinary //tests/haskell_cabal_package:haskell_cabal_package', attempted action: action 'HaskellCabalLibrary //tests/haskell_cabal_package:lib'
```
---
 tests/haskell_cabal_package/BUILD.bazel | 27 +++++++++++++++++++++++++
 tests/haskell_cabal_package/exe/Main.hs |  3 +++
 tests/haskell_cabal_package/lib.cabal   | 16 +++++++++++++++
 tests/haskell_cabal_package/lib/Lib.hs  |  4 ++++
 4 files changed, 50 insertions(+)
 create mode 100644 tests/haskell_cabal_package/BUILD.bazel
 create mode 100644 tests/haskell_cabal_package/exe/Main.hs
 create mode 100644 tests/haskell_cabal_package/lib.cabal
 create mode 100644 tests/haskell_cabal_package/lib/Lib.hs

diff --git a/tests/haskell_cabal_package/BUILD.bazel b/tests/haskell_cabal_package/BUILD.bazel
new file mode 100644
index 00000000..55afeee0
--- /dev/null
+++ b/tests/haskell_cabal_package/BUILD.bazel
@@ -0,0 +1,27 @@
+load(
+    "@rules_haskell//haskell:cabal.bzl",
+    "haskell_cabal_binary",
+    "haskell_cabal_library",
+)
+load(
+    "@rules_haskell//haskell:defs.bzl",
+    "haskell_toolchain_library",
+)
+
+haskell_toolchain_library(name = "base")
+
+haskell_cabal_library(
+    name = "lib",
+    srcs = glob(["**"]),
+    version = "0.1.0.0",
+    deps = [":base"],
+)
+
+haskell_cabal_binary(
+    name = "haskell_cabal_package",
+    srcs = glob(["**"]),
+    deps = [
+        ":base",
+        ":lib",
+    ],
+)
diff --git a/tests/haskell_cabal_package/exe/Main.hs b/tests/haskell_cabal_package/exe/Main.hs
new file mode 100644
index 00000000..33965743
--- /dev/null
+++ b/tests/haskell_cabal_package/exe/Main.hs
@@ -0,0 +1,3 @@
+module Main (main) where
+
+import Lib (main)
diff --git a/tests/haskell_cabal_package/lib.cabal b/tests/haskell_cabal_package/lib.cabal
new file mode 100644
index 00000000..c57e2d2f
--- /dev/null
+++ b/tests/haskell_cabal_package/lib.cabal
@@ -0,0 +1,16 @@
+cabal-version: >=1.10
+name: lib
+version: 0.1.0.0
+build-type: Simple
+
+library
+  build-depends: base >=4.12 && <4.13
+  default-language: Haskell2010
+  exposed-modules: Lib
+  hs-source-dirs: lib
+
+executable haskell_cabal_package
+  build-depends: base, lib
+  default-language: Haskell2010
+  main-is: Main.hs
+  hs-source-dirs: exe
diff --git a/tests/haskell_cabal_package/lib/Lib.hs b/tests/haskell_cabal_package/lib/Lib.hs
new file mode 100644
index 00000000..1ec31b70
--- /dev/null
+++ b/tests/haskell_cabal_package/lib/Lib.hs
@@ -0,0 +1,4 @@
+module Lib (main) where
+
+main :: IO ()
+main = pure ()
